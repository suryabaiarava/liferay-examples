{
  "_args": [
    [
      {
        "raw": "liferay-css-parse@https://registry.npmjs.org/liferay-css-parse/-/liferay-css-parse-1.7.1.tgz",
        "scope": null,
        "escapedName": "liferay-css-parse",
        "name": "liferay-css-parse",
        "rawSpec": "https://registry.npmjs.org/liferay-css-parse/-/liferay-css-parse-1.7.1.tgz",
        "spec": "https://registry.npmjs.org/liferay-css-parse/-/liferay-css-parse-1.7.1.tgz",
        "type": "remote"
      },
      "D:\\Liferay7\\PA-WORKSPACE\\patient-alliance-theme\\node_modules\\liferay-theme-tasks"
    ]
  ],
  "_from": "liferay-css-parse@>=1.7.1 <1.8.0",
  "_id": "liferay-css-parse@1.7.1",
  "_inCache": true,
  "_location": "/liferay-theme-tasks/liferay-css-parse",
  "_phantomChildren": {},
  "_requested": {
    "raw": "liferay-css-parse@https://registry.npmjs.org/liferay-css-parse/-/liferay-css-parse-1.7.1.tgz",
    "scope": null,
    "escapedName": "liferay-css-parse",
    "name": "liferay-css-parse",
    "rawSpec": "https://registry.npmjs.org/liferay-css-parse/-/liferay-css-parse-1.7.1.tgz",
    "spec": "https://registry.npmjs.org/liferay-css-parse/-/liferay-css-parse-1.7.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/liferay-theme-tasks",
    "/liferay-theme-tasks/liferay-r2"
  ],
  "_resolved": "https://registry.npmjs.org/liferay-css-parse/-/liferay-css-parse-1.7.1.tgz",
  "_shasum": "c0750cc0f0645d2190eeefee845b6fcb154f3e45",
  "_shrinkwrap": null,
  "_spec": "liferay-css-parse@https://registry.npmjs.org/liferay-css-parse/-/liferay-css-parse-1.7.1.tgz",
  "_where": "D:\\Liferay7\\PA-WORKSPACE\\patient-alliance-theme\\node_modules\\liferay-theme-tasks",
  "author": {
    "name": "TJ Holowaychuk",
    "email": "tj@vision-media.ca"
  },
  "bugs": {
    "url": "https://github.com/visionmedia/css-parse/issues"
  },
  "dependencies": {},
  "description": "Liferay fork of CSS parser",
  "devDependencies": {
    "bytes": "~0.2.1",
    "matcha": "~0.4.0",
    "mocha": "*",
    "should": "*"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/visionmedia/css-parse#readme",
  "keywords": [
    "css",
    "parser",
    "stylesheet"
  ],
  "license": "MIT",
  "main": "index",
  "name": "liferay-css-parse",
  "optionalDependencies": {},
  "readme": "# css-parse [![Build Status](https://travis-ci.org/visionmedia/css-parse.png)](https://travis-ci.org/visionmedia/css-parse)\n\n  JavaScript CSS parser for nodejs and the browser.\n\n## Installation\n\n  $ npm install css-parse\n\n## Usage\n\n````javascript\nvar parse = require('css-parse');\n\n// CSS input string\nvar css = \"body { \\n background-color: #fff;\\n }\";\n\nvar output_obj = parse(css);\n\n// Position and Filename parameters\nvar output_obj_pos = parse(css, { position: true, filename: 'file.css' });\n\n// Print parsed object as CSS string\nconsole.log(JSON.stringify(output_obj, null, 2));\n\n````\n\n## API\n\n### var ast = parse(css, [options])\n\n`options`:\n\n- `filename` - recommended for debugging\n- `position` - `true` by default.\n\n### Errors\n\nErrors will have `err.position` where `position` is:\n\n- `start` - start line and column numbers\n- `end` - end line and column numbers\n- `filename` - filename if passed to options\n- `source` - source CSS string\n\nIf you create any errors in plugins such as in [rework](https://github.com/visionmedia/rework), you __must__ set the `position` as well for consistency.\n\n## Example\n\ncss:\n\n```css\nbody {\n  background: #eee;\n  color: #888;\n}\n```\n\nparse tree:\n\n```json\n{\n  \"type\": \"stylesheet\",\n  \"stylesheet\": {\n    \"rules\": [\n      {\n        \"type\": \"rule\",\n        \"selectors\": [\n          \"body\"\n        ],\n        \"declarations\": [\n          {\n            \"type\": \"declaration\",\n            \"property\": \"background\",\n            \"value\": \"#eee\"\n          },\n          {\n            \"type\": \"declaration\",\n            \"property\": \"color\",\n            \"value\": \"#888\"\n          }\n        ]\n      }\n    ]\n  }\n}\n```\n\nparse tree with `.position` enabled:\n\n```json\n{\n  \"type\": \"stylesheet\",\n  \"stylesheet\": {\n    \"rules\": [\n      {\n        \"type\": \"rule\",\n        \"selectors\": [\n          \"body\"\n        ],\n        \"declarations\": [\n          {\n            \"type\": \"declaration\",\n            \"property\": \"background\",\n            \"value\": \"#eee\",\n            \"position\": {\n              \"start\": {\n                \"line\": 3,\n                \"column\": 3\n              },\n              \"end\": {\n                \"line\": 3,\n                \"column\": 19\n              }\n            }\n          },\n          {\n            \"type\": \"declaration\",\n            \"property\": \"color\",\n            \"value\": \"#888\",\n            \"position\": {\n              \"start\": {\n                \"line\": 4,\n                \"column\": 3\n              },\n              \"end\": {\n                \"line\": 4,\n                \"column\": 14\n              }\n            }\n          }\n        ],\n        \"position\": {\n          \"start\": {\n            \"line\": 2,\n            \"column\": 1\n          },\n          \"end\": {\n            \"line\": 5,\n            \"column\": 2\n          }\n        }\n      }\n    ]\n  }\n}\n```\n\nIf you also pass in `filename: 'path/to/original.css'`, that will be set\non `node.position.filename`.\n\n## Performance\n\n  Parsed 15,000 lines of CSS (2mb) in 40ms on my macbook air.\n\n## Related\n\n  [css-stringify](https://github.com/visionmedia/css-stringify \"CSS-Stringify\")\n  [css-value](https://github.com/visionmedia/css-value \"CSS-Value\")\n\n## License\n\n  MIT\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/visionmedia/css-parse.git"
  },
  "scripts": {
    "test": "make test"
  },
  "version": "1.7.1"
}
